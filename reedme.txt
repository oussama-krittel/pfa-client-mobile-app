add coulours into a variables,
fix the appText component,
fix the botoom sheet component (pull to close and be close at the begining),
add click on the location featuar,!!!!!!
add Hz sliding component,
add click on a card ot navigate the the resto/cafe page using id, (mosh)
********************************
orgenise imports and files and naming convension,50%
complete styling drawer menu,90%
style the bottom sheet content,20%
add google map featuar to it,50%
make the app more dynamic (ok ,name ,location,card,...),70%
add the setLocation screen bottomsheet and style it ,5%  (add click on a button to change loctiton state)
hide the search field from the header when scroll down and show when scroll up,40%
style card with image and dynamic info,30%
********************************
reloade the app when give the permitio via settings,
resolve markerLocation.formatedAdress is undifined,
most likely i dont neet the address state in the setLocationScreen remove it,
whan the user with no permition clickon devise location aleart him go to settings,(adjustement)
close the keyboark when open bottomsheet,
allow permition from the app second time,!!!!
add scrool in the section list when clicking on the stikysegmenyt,
add like a resto and add rating and style header for resto,
implement Serach,
add rewards icon with navigation to info about rewards in a resto page,
add favoris page with two section favoris and alredy visited restaurants,
if ther is no reso in the reagion display where not there yet were expanding hopfuly will be there soon with change location button,
chage the restorant screen add feedback,!!!!!!!!!!!!!!!
alear are you sure if want to exit restoscreen when the basket is not empty,
fix navigatin create sershstack and map stack;





codes:





const reverseGeocode = async (latitude, longitude) => {
  const apiKey = 'YOUR_API_KEY'; // Replace with your API key
  const apiUrl = `https://api.example.com/reverse-geocode?lat=${latitude}&lon=${longitude}&apiKey=${apiKey}`;

  try {
    const response = await fetch(apiUrl);
    const data = await response.json();
    
    // Parse the response data to extract address information
    const address = data.address;
    console.log('Reverse Geocoded Address:', address);
    return address;
  } catch (error) {
    console.error('Error fetching reverse geocode:', error);
    return null;
  }
};
